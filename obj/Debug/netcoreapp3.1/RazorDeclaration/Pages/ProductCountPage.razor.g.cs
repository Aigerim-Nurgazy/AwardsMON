#pragma checksum "/Users/aigerim/Downloads/HospitalsBlz/Pages/ProductCountPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5f83bfa4ca530f27592c08d995152d01c85555a4"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace HospitalsBlz.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using HospitalsBlz;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using HospitalsBlz.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/HospitalsBlz/Pages/ProductCountPage.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/HospitalsBlz/Pages/ProductCountPage.razor"
using HospitalsBlz.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/aigerim/Downloads/HospitalsBlz/Pages/ProductCountPage.razor"
using HospitalsBlz.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/productcntpage")]
    public partial class ProductCountPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 127 "/Users/aigerim/Downloads/HospitalsBlz/Pages/ProductCountPage.razor"
       
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    System.Security.Claims.ClaimsPrincipal CurrentUser;

    ApplicationUser objUser;
    string strError = "";
    bool ShowPopup = false;

    private List<ProductCount> productCounts= new List<ProductCount>();
    private List<Product> products=new List<Product>();
    private List<Category> categories = new List<Category>();
    private List<Departments> departments=new List<Departments>();
    private ProductCount productCnt = new ProductCount();

    private int? catId = null;
    private int? CategoryId
    {
        get { return catId; }
        set { catId = value; SelectResource(); }
    }

    void AddNewUser()
    {
        productCnt = new ProductCount();
        productCnt.CreateDate = DateTime.Now;
        productCnt.ApplicationUserId = objUser.Id;
        productCnt.Id = 0;
        ShowPopup = true;
    }
    async Task SaveUser()
    {
        try
        {
            // Is this an existing user?
            if (productCnt.Id != 0)
            {
                // Get the user
                ProductCount rc = await db.ProductCounts.FindAsync(productCnt.Id);
                rc.DepartmentsId = productCnt.DepartmentsId;
                rc.ProductId = productCnt.ProductId;
                rc.Qty = productCnt.Qty;
                //Insert history;

                //db.ProductCounts.Update(rc);
                await db.SaveChangesAsync();
            }
            else
            {
                db.ProductCounts.Add(productCnt);
                await db.SaveChangesAsync();
            }

            // Close the Popup
            ShowPopup = false;
            // Refresh Users
            LoadData();
            productCnt = new ProductCount();
        }
        catch (Exception ex)
        {
            strError = ex.GetBaseException().Message;
        }
    }
    async Task EditUser(ProductCount rc)
    {
        productCnt = rc;
        //products = db.Products.Where(x => x.CategoryId == ).ToList();
        ShowPopup = true;
    }
    async Task DeleteUser()
    {
        // Close the Popup
        ShowPopup = false;
        // Get the user
        var rc = await db.ProductCounts.FindAsync(productCnt.Id);
        if (rc != null)
        {
            db.ProductCounts.Remove(rc);
            await db.SaveChangesAsync();
        }
        LoadData();
    }
    void ClosePopup()
    {
        // Close the Popup
        ShowPopup = false;
    }


    void SelectResource()
    {
        products = db.Products.Where(x => x.CategoryId == catId).ToList();
    }


    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
        objUser = await _userManager.FindByNameAsync(CurrentUser.Identity.Name);
        categories = db.Categories.ToList();
        products = db.Products.ToList();
        LoadData();
    }

    public void LoadData()
    {
        productCounts = db.ProductCounts.Where(x => x.ApplicationUserId == objUser.Id).ToList();
        departments = db.Departments.Where(x => x.ApplicationUserId == objUser.Id).ToList();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ApplicationDbContext db { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<ApplicationUser> _userManager { get; set; }
    }
}
#pragma warning restore 1591
