#pragma checksum "/Users/aigerim/Downloads/HospitalsBlz/Pages/DepPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2bad421e9a31a5f9a2e68197b3c133d0a1d45a7a"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace HospitalsBlz.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using HospitalsBlz;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using HospitalsBlz.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/aigerim/Downloads/HospitalsBlz/Pages/DepPage.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/HospitalsBlz/Pages/DepPage.razor"
using HospitalsBlz.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/HospitalsBlz/Pages/DepPage.razor"
using HospitalsBlz.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/departmentpage")]
    public partial class DepPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 134 "/Users/aigerim/Downloads/HospitalsBlz/Pages/DepPage.razor"
       

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    System.Security.Claims.ClaimsPrincipal CurrentUser;

    ApplicationUser objUser;
    string strError = "";
    bool ShowPopup = false;

    private List<Departments> departments = new List<Departments>();
    private Departments department = new Departments();


    void AddNewUser()
    {
        department = new Departments();
        department.CreateDate = DateTime.Now;
        department.ApplicationUserId = objUser.Id;
        department.HospitalsId = objUser.HospitalsId;
        department.Id = 0;
        ShowPopup = true;
    }
    async Task SaveUser()
    {
        try
        {
            // Is this an existing user?
            if (department.Id != 0)
            {
                // Get the user
                Departments dep = await db.Departments.FindAsync(department.Id);
                dep.Contacts = department.Contacts;
                dep.CovidQtyPasients = department.CovidQtyPasients;
                dep.CreateDate = DateTime.Now;
                dep.HospitalsId = department.HospitalsId;
                dep.Name = department.Name;
                dep.Phone = department.Phone;
                dep.PlaceCovidQty = department.PlaceCovidQty;
                dep.TotalFreeCovidPlace = department.TotalFreeCovidPlace;
                dep.TotalFreePlace = department.TotalFreePlace;
                dep.TotalPasients = dep.TotalPasients;
                dep.TotalPlaceQty = dep.TotalPlaceQty;
                //Insert history;

                await db.SaveChangesAsync();
                await InsertLog(dep, "Update");
            }
            else
            {
                db.Departments.Add(department);
                await db.SaveChangesAsync();
                await InsertLog(department, "Insert");
            }
            department = new Departments();
            // Close the Popup
            ShowPopup = false;
            // Refresh Users
            LoadData();
        }
        catch (Exception ex)
        {
            strError = ex.GetBaseException().Message;
        }
    }
    async Task EditUser(Departments dep)
    {
        // Set the selected user as the current user
        department = dep;
        ShowPopup = true;
    }
    async Task DeleteUser()
    {
        // Close the Popup
        ShowPopup = false;
        // Get the user
        var dep = await db.Departments.FindAsync(department.Id);
        if (dep != null)
        {
            db.Departments.Remove(dep);
            await InsertLog(dep, "Remove");
            //History insert
        }
        LoadData();
    }
    void ClosePopup()
    {
        // Close the Popup
        ShowPopup = false;
    }

    async Task InsertLog(Departments department, string action)
    {
        DepartmentsHistory dep = new DepartmentsHistory();
        dep.Contacts = department.Contacts;
        dep.CovidQtyPasients = department.CovidQtyPasients;
        dep.CreateDate = DateTime.Now;
        dep.HospitalsId = department.HospitalsId;
        dep.Name = department.Name;
        dep.Phone = department.Phone;
        dep.PlaceCovidQty = department.PlaceCovidQty;
        dep.TotalFreeCovidPlace = department.TotalFreeCovidPlace;
        dep.TotalFreePlace = department.TotalFreePlace;
        dep.TotalPasients = dep.TotalPasients;
        dep.TotalPlaceQty = dep.TotalPlaceQty;
        dep.Action = action;
        dep.OldId = department.Id;
        dep.ApplicationUserId = department.ApplicationUserId;
        db.DepartmentsHistory.Add(dep);
        await db.SaveChangesAsync();
    }


    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
        objUser = await _userManager.FindByNameAsync(CurrentUser.Identity.Name);
        LoadData();
    }

    public void LoadData()
    {
        departments = db.Departments.Where(x => x.ApplicationUserId == objUser.Id).ToList();
    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ApplicationDbContext db { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<ApplicationUser> _userManager { get; set; }
    }
}
#pragma warning restore 1591
