#pragma checksum "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "65d2f6788363109a773750e0f85d7c2f915edade"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlzMON.Pages
{
    #line hidden
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using BlzMON;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using BlzMON.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Users/aigerim/Downloads/PFT/BlzMON/_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using BlzMON.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using BlzMON.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Microsoft.AspNetCore.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using BlzMON.Controllers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/InitializerPage")]
    public partial class InitializerPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 566 "/Users/aigerim/Downloads/PFT/BlzMON/Pages/InitializerPage.razor"
       

    // files types A, B, C, D, E
    public IFileListEntry[][] allFiles = new IFileListEntry[5][];

    // selected files names
    public string fileNamesA = "";
    public string fileNamesB = "";
    public string fileNamesC = "";
    public string fileNamesD = "";
    public string fileNamesE = "";

    // Initialize all files array and display files names
    void HandleSelection(IFileListEntry[] files, string fileTypeName)
    {

        string fileNames = "";

        foreach (var file in files)
        {
            fileNames += file.Name + ", ";
        }

        if (fileTypeName == "A") { allFiles[0] = files; fileNamesA = fileNames; }
        if (fileTypeName == "B") { allFiles[1] = files; fileNamesB = fileNames; }
        if (fileTypeName == "C") { allFiles[2] = files; fileNamesC = fileNames; }
        if (fileTypeName == "D") { allFiles[3] = files; fileNamesD = fileNames; }
        if (fileTypeName == "E") { allFiles[4] = files; fileNamesE = fileNames; }
    }


    //
    public List<Initializers> initializers = new List<Initializers>();
    public Initializers initializer = new Initializers();

    // Where to use? can remove?
    List<Possitions> possitions = new List<Possitions>();
    List<Educations> educations = new List<Educations>();
    List<Areass> areas = new List<Areass>();
    List<Regions> regions = new List<Regions>();
    List<Awards> awards = new List<Awards>();
    //List<Regions> regions = new List<Regions>();
    //List<Initializers> initializers = new List<Initializers>();
    // List<Documents> documents = new List<Documents>();
    // Initializers initializer = new Initializers();


    // Auth
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    System.Security.Claims.ClaimsPrincipal CurrentUser;

    // What is it?
    ApplicationUser objUser;
    string strError = "";
    // what popup?
    bool ShowPopup = false;

    // why use it?
    void AddNew()
    {
        initializer = new Initializers();
        possitions = db.Possition.ToList();
        educations = db.Education.ToList();
        areas = db.Areaq.ToList();
        awards = db.Award.ToList();
        regions = db.Region.ToList();
        // hide this lists!

        //maay...
        // initializers = db.Initializers.ToList();
        //regions = db.Region.ToList();
        // documents = db.Document.ToList();
        initializer.Id = 0;
        ShowPopup = true;

        // new selected files names
        fileNamesA = "";
        fileNamesB = "";
        fileNamesC = "";
        fileNamesD = "";
        fileNamesE = "";
    }

    async Task Save()
    {
        // where validation?
        try
        {
            // Is this an existing user?
            if (initializer.Id != 0)
            {
                // why so?
                Initializers init = await db.Initializers.FindAsync(initializer.Id);
                init.PersonName = initializer.PersonName;
                init.PersonSurname = initializer.PersonSurname;
                init.PersonPatronymic = initializer.PersonPatronymic;
                init.DateOfBirth = initializer.DateOfBirth;
                init.CellPhone = initializer.CellPhone;
                init.EmailAddress = initializer.EmailAddress;
                init.PersonAddress = initializer.PersonAddress;
                init.Possition = initializer.Possition;
                possitions = db.Possition.ToList();
                educations = db.Education.ToList();
                areas = db.Areaq.ToList();
                awards = db.Award.ToList();
                regions = db.Region.ToList();
                // hide this lists!

                // forgot this?
                db.Initializers.Update(initializer);
                await db.SaveChangesAsync();
            }
            else
            {
                // int maxId = db.Initializers.Max(x => x.Id);
                // initializer.Id = (maxId + 1);
                db.Initializers.Add(initializer);
                await db.SaveChangesAsync();
            }

            // Upload files and in server update Initializer
            SaveFiles(allFiles[0], initializer.Id, "заявление");
            SaveFiles(allFiles[1], initializer.Id, "представление");
            SaveFiles(allFiles[2], initializer.Id, "трудовая");
            SaveFiles(allFiles[3], initializer.Id, "награда");
            SaveFiles(allFiles[4], initializer.Id, "выписка");

            // Close the Popup
            ShowPopup = false;
            // Refresh Users
            LoadData();
            initializer = new Initializers();
        }
        catch (Exception ex)
        {
            strError = ex.GetBaseException().Message;
            System.Diagnostics.Debug.Print(strError);
        }
    }


    // to upload files
    async void SaveFiles(IFileListEntry[] files, int initializatorId, string fileTypeName)
    {

        if (files == null) return;

        foreach (var file in files)
        {
            Random rnd = new Random();
            string filename = fileTypeName + "_" + rnd.Next(1, 10000) + Path.GetExtension(file.Name);

            // upload one file
            await postFiles.UploadAsync(file, filename, initializatorId, fileTypeName);
        }
    }


    // what is it? where editing?
    void Edit(Initializers rc)
    {
        initializer = rc;
        possitions = db.Possition.ToList();
        educations = db.Education.ToList();
        areas = db.Areaq.ToList();
        awards = db.Award.ToList();
        regions = db.Region.ToList();
        // hide this lists!

        //products = db.Products.Where(x => x.CategoryId == ).ToList();

        fileNamesA = rc.FilesNamesZayavleniye;
        fileNamesB = rc.FilesNamesPredstavleniye;
        fileNamesC = rc.FilesNamesTrudovaya;
        fileNamesD = rc.FilesNamesNagrady;
        fileNamesE = rc.FilesNamesVypyska;

        ShowPopup = true;
    }

    // Details dialog
    bool isShowDetailsDialog = false;
    Initializers showDetailsInitializer = new Initializers();

    void ShowDetailsDialog(Initializers initializer)
    {
        isShowDetailsDialog = true;

        // get from database, becouse file names will updated after upload
        showDetailsInitializer = db.Initializers.Find(initializer.Id);
        // showDetailsInitializer = initializer;
    }

    // to delete
    async Task Delete()
    {
        // Close the Popup
        ShowPopup = false;
        // Get the user
        var rc = await db.Initializers.FindAsync(initializer.Id);
        if (rc != null)
        {
            db.Initializers.Remove(rc);
            await db.SaveChangesAsync();
        }
        LoadData();
    }

    // when page loaded
    protected override async Task OnInitializedAsync()
    {
        // why getting user?
        CurrentUser = (await authenticationStateTask).User;
        objUser = await _userManager.FindByNameAsync(CurrentUser.Identity.Name);

        // what data loading?
        LoadData();
    }

    // loading Initiators
    public void LoadData()
    {

        // loading Initiators
        initializers = db.Initializers
            .OrderBy(x => x.PersonSurname)
            .Include(o => o.Possition)
            .Include(o => o.Education)
            .Include(o => o.Areak)
            .Include(o => o.Region)
            .Include(o => o.Award)
            .Include(o => o.Orders)
            .ToList();

    }


    // What data?
    // Дата
    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    void Change(DateTime? value, string name, string format)
    {
        events.Add(DateTime.Now, $"{name} value changed to {value?.ToString(format)}");
        StateHasChanged();
    }


    // close popup
    void ClosePopup()
    {
        // Close the Popup
        ShowPopup = false;
    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private BlzMON.Services.PostFiles postFiles { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ApplicationDbContext db { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<ApplicationUser> _userManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IViewLocalizer Localizer { get; set; }
    }
}
#pragma warning restore 1591
