#pragma checksum "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/Pages/Hospitalas/Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "59ebffff107bf9b517c09d394435150e9478cea9"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace HospitalsBlz.HospitalsBlz.Pages.Hospitalas
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 10 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/aigerim/Downloads/HospitalsBlz/_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using HospitalsBlz;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/_Imports.razor"
using HospitalsBlz.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/Pages/Hospitalas/Index.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/Pages/Hospitalas/Index.razor"
using HospitalsBlz.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/Pages/Hospitalas/Index.razor"
using HospitalsBlz.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/hospitals/index")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 116 "/Users/aigerim/Downloads/HospitalsBlz/HospitalsBlz/Pages/Hospitalas/Index.razor"
       
    private int CurrentValue { get; set; }
    public string itemValue { get; set; }
    public string item
    {
        get { return itemValue; }
        set
        {
            CurrentValue = hospitals.Count();
            if (value.Length > 0)
            {
                hospitals = hospitals2.Where(x => x.Name.ToLower().Contains(value)).ToList();
            }
            else
            {
                hospitals = hospitals2;
            }
            itemValue = value;
        }
    }
    private List<Hospitals> hospitals=new List<Hospitals>();
    private List<Hospitals> hospitals2;
    private Hospitals hospital = new Hospitals();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    System.Security.Claims.ClaimsPrincipal CurrentUser;

    ApplicationUser objUser;
    string strError = "";
    bool ShowPopup = false;


    void AddNewUser()
    {
        hospital = new Hospitals();
        hospital.Code = "Test";
        hospital.Id = 0;
        ShowPopup = true;
    }
    async Task SaveUser()
    {
        try
        {
            // Is this an existing user?
            if (hospital.Id != 0)
            {
                Hospitals hosp = await db.Hospitals.FindAsync(hospital.Id);
                hosp.Name = hospital.Name;
                hosp.Code = hospital.Code;
                hosp.Address = hospital.Address;
                hosp.Contacts = hospital.Contacts;
                hosp.Description = hospital.Description;
                hosp.Person = hospital.Person; ;
                await db.SaveChangesAsync();
            }
            else
            {
                int maxId = db.Hospitals.Max(x => x.Id);
                hospital.Id = (maxId + 1);
                db.Hospitals.Add(hospital);
                await db.SaveChangesAsync();
            }

            // Close the Popup
            ShowPopup = false;
            // Refresh Users
            LoadData();
            hospital = new Hospitals();
        }
        catch (Exception ex)
        {
            strError = ex.GetBaseException().Message;
        }
    }
    async Task EditUser(Hospitals rc)
    {
        hospital = rc;
        //products = db.Products.Where(x => x.CategoryId == ).ToList();
        ShowPopup = true;
    }
    async Task DeleteUser()
    {
        // Close the Popup
        ShowPopup = false;
        // Get the user
        var rc = await db.Hospitals.FindAsync(hospital.Id);
        if (rc != null)
        {
            db.Hospitals.Remove(rc);
            await db.SaveChangesAsync();
        }
        LoadData();
    }
    void ClosePopup()
    {
        // Close the Popup
        ShowPopup = false;
    }

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
        objUser = await _userManager.FindByNameAsync(CurrentUser.Identity.Name);

        hospital = new Hospitals();
        LoadData();
    }

    public void LoadData()
    {
        hospitals = db.Hospitals.OrderBy(x=>x.Name).ToList();
        hospitals2 = db.Hospitals.OrderBy(x => x.Name).ToList();
    }



    private async Task InsertHospitals()
    {
        db.Hospitals.Add(hospital);
        await db.SaveChangesAsync();
        hospitals.Add(hospital);
        hospital = new Hospitals();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ApplicationDbContext db { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<ApplicationUser> _userManager { get; set; }
    }
}
#pragma warning restore 1591
