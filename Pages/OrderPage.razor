@page "/OrderPage/{orderId}"
@using Microsoft.AspNetCore.Identity;
@using BlzMON.Data
@using BlzMON.Models
@using Microsoft.EntityFrameworkCore;
@inject UserManager<ApplicationUser> _userManager;
@inject ApplicationDbContext db
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

@namespace BlzMON.Pages

<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-4"><h4>Список инициаторов в приказе от @order.OrderDate.ToString("d")</h4></div>
    <div class="col-md-4"></div>
</div>
<br />

<RadzenGrid Data="@initializers"
            AllowFiltering="true" AllowPaging="true" AllowSorting="true" StartsWithText="Поиск" TItem="Initializers" ColumnWidth="200px">
    <Columns>
        <RadzenGridColumn Width="70px" TextAlign="TextAlign.Center" TItem="Initializers" Property="Id" Title="ID" />

        <RadzenGridColumn Width="110px" TItem="Initializers" Property="Areak.AreaName" Title="Область" />
        <RadzenGridColumn Width="150px" TItem="Initializers" Context="initializer" Property="GetFullName" Title="ФИО" />
        <RadzenGridColumn Width="250px" TItem="Initializers" Property="Possition.PossName" Title="Должность" />
        <RadzenGridColumn Width="250px" TItem="Initializers" Property="Education.EduName" Title="Образование" />
        <RadzenGridColumn Width="150px" TItem="Initializers" Property="WorkExpierence" Title="Опыт" />
        <RadzenGridColumn Width="150px" TItem="Initializers" Property="Areak.AreaName" Title="Область" />
        <RadzenGridColumn Width="150px" TItem="Initializers" Property="Region.RegName" Title="Регион" />
        <RadzenGridColumn Width="150px" TItem="Initializers" Property="DateOfBirth" Title="Дата рождения" />
        <RadzenGridColumn Width="150px" TItem="Initializers" Property="CellPhone" Title="Телефон" />
        <RadzenGridColumn Width="250px" TItem="Initializers" Property="EmailAddress" Title="E-почта" />
        <RadzenGridColumn Width="250px" TItem="Initializers" Property="PersonAddress" Title="Адрес" />
        <RadzenGridColumn Width="250px" TItem="Initializers" Property="Award.AwardName" Title="Награда" />
    </Columns>
</RadzenGrid>

<br />
<table class="table">
    <tr>
        <td><button class="btn btn-success" @onclick="NavigateToOrdersPage">Назад</button></td>
    </tr>
</table>


@code { // OrderId is route parameter
    [Parameter]
    public string orderId { get; set; }

    //
    public Orders order = new Orders();

    // list of inits
    public List<Initializers> initializers = new List<Initializers>();

    // on page loaded
    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
        objUser = await _userManager.FindByNameAsync(CurrentUser.Identity.Name);

        // fill inits
        // initializers = db.Initializers.Where(i => i.OrdersId == int.Parse(orderId)).OrderBy(x => x.PersonSurname).ToList();

        // loading Initiators
        initializers = db.Initializers
            .Where(i => i.OrdersId == int.Parse(orderId))
            .OrderBy(x => x.PersonSurname)
            .Include(o => o.Possition)
            .Include(o => o.Education)
            .Include(o => o.Areak)
            .Include(o => o.Region)
            .Include(o => o.Award)
            .Include(o => o.Orders)
            .ToList();

        // init order
        order = db.Order.Find(int.Parse(orderId));

    }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    System.Security.Claims.ClaimsPrincipal CurrentUser;

    ApplicationUser objUser;

    // Method to navigate order page without refreshing page
    private void NavigateToOrdersPage()
    {
        navigationManager.NavigateTo("OrdersPage");
    }

}
